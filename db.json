{"Asset":{"cicrznknz8logroh":{"_id":"cicrznknz8logroh","source":"themes/writing/source/favicon.ico","mtime":1384784131000},"8kh6x52xehfbi7ja":{"_id":"8kh6x52xehfbi7ja","source":"themes/writing/source/fancybox/blank.gif","mtime":1384784131000},"weyhvj76d4wkfbiz":{"_id":"weyhvj76d4wkfbiz","source":"themes/writing/source/fancybox/fancybox_loading.gif","mtime":1384784131000},"t2rihqb5ueoss3m8":{"_id":"t2rihqb5ueoss3m8","source":"themes/writing/source/fancybox/fancybox_loading@2x.gif","mtime":1384784131000},"klm71ioak8msz6hk":{"_id":"klm71ioak8msz6hk","source":"themes/writing/source/fancybox/fancybox_overlay.png","mtime":1384784131000},"hgl0kzvfr9fn4xm2":{"_id":"hgl0kzvfr9fn4xm2","source":"themes/writing/source/fancybox/fancybox_sprite.png","mtime":1384784131000},"sw3e4cw1oqa1vpez":{"_id":"sw3e4cw1oqa1vpez","source":"themes/writing/source/fancybox/fancybox_sprite@2x.png","mtime":1384784131000},"ostu44heel36l4fk":{"_id":"ostu44heel36l4fk","source":"themes/writing/source/fancybox/jquery.fancybox.css","mtime":1384784131000},"2mh1gnt47hvy2egq":{"_id":"2mh1gnt47hvy2egq","source":"themes/writing/source/fancybox/jquery.fancybox.pack.js","mtime":1384784131000},"8alozkke4yw58kmg":{"_id":"8alozkke4yw58kmg","source":"themes/writing/source/js/gallery.js","mtime":1384784131000},"so2fnq3u6h1j2kns":{"_id":"so2fnq3u6h1j2kns","source":"themes/writing/source/js/jquery.imagesloaded.min.js","mtime":1384784131000},"yiqvrpwd39lbp6st":{"_id":"yiqvrpwd39lbp6st","source":"themes/writing/source/css/style.styl","mtime":1384784131000},"izswsnbfzb1ul281":{"_id":"izswsnbfzb1ul281","source":"themes/writing/source/css/font/fontawesome-webfont.eot","mtime":1384784131000},"xc61vh9n909ycc36":{"_id":"xc61vh9n909ycc36","source":"themes/writing/source/css/font/fontawesome-webfont.svg","mtime":1384784131000},"zwbt6gl02dfatf68":{"_id":"zwbt6gl02dfatf68","source":"themes/writing/source/css/font/fontawesome-webfont.ttf","mtime":1384784131000},"ut38rfa88onlk3jm":{"_id":"ut38rfa88onlk3jm","source":"themes/writing/source/css/font/fontawesome-webfont.woff","mtime":1384784131000},"87m0zdmj2pqnsako":{"_id":"87m0zdmj2pqnsako","source":"themes/writing/source/css/img/bg.jpg","mtime":1384784131000},"uzf3fujyocm7oox1":{"_id":"uzf3fujyocm7oox1","source":"themes/writing/source/css/img/logo.png","mtime":1384784131000},"qqnrraq8cyoggmce":{"_id":"qqnrraq8cyoggmce","source":"themes/writing/source/css/img/sprite-pagination.png","mtime":1384784131000},"nbql8c0lrkhyfxxu":{"_id":"nbql8c0lrkhyfxxu","source":"themes/writing/source/css/img/themes-newone-2.png","mtime":1384784131000},"ak45qj5kpthnqsj8":{"_id":"ak45qj5kpthnqsj8","source":"themes/writing/source/css/img/themes-newone.png","mtime":1384784131000},"40ip2p2i78ubzuwo":{"_id":"40ip2p2i78ubzuwo","source":"themes/writing/source/css/img/themes-writing-2.png","mtime":1384784131000},"5iwz7cvkk9zf98oi":{"_id":"5iwz7cvkk9zf98oi","source":"themes/writing/source/css/img/themes-writing.png","mtime":1384784131000},"5gyofloho4x5gljr":{"_id":"5gyofloho4x5gljr","source":"themes/writing/source/images/work/work-pdflabs.png","mtime":1384788622000},"nesfvdsu2qte6p4w":{"_id":"nesfvdsu2qte6p4w","source":"source/work-pdflabs.png","mtime":1384789112000},"c6rtpwaydkweudum":{"_id":"c6rtpwaydkweudum","source":"source/images/work-pdflabs.png","mtime":1384789181000}},"Cache":{"skjj78q6sqfqsuqh":{"_id":"skjj78q6sqfqsuqh","content":"title: 记：“摇滚吧，成都音乐节”\ndate: 2013-10-19 11:39:11\ntags:\n---\n\n# 前言\n\n    简单来说今年国庆期间最值得我高兴的两件事情，一件是跟老姐到音乐节摆地摊，另一件事情就是教会了一个大龄女青年骑车。 稍微得意一下。 话说程序员每天都过得CODE和BUG相依为命的生活，所以偶尔稍微有点不同总能让我感到兴奋。\n\n   老姐给我感觉是一直有一种裁缝的文艺气息，读的是新闻传媒偶尔喜欢卖弄小清新风格的文字，还没毕业有去学了服装设计， 后面实习结果又去了一家[@红秀](http://weibo.com/graziachina?sudaref=www.google.com.hk)的某时尚杂志社实习。 总的来说算得上是个文艺独立女青年，时常喜欢自己做点东西然后到上海各种群体活动（如音乐节）投机倒把的小勾当补贴日常开支。\n\n   ![](http://media.tumblr.com/8ca4f8185393da1cbddb8b3428d589ef/tumblr_inline_muwbunwAgE1sosno0.jpg)\n\n   文艺女青年登场\n\n# 照片墙\n   \n  先来几张卖的东西的照片，当然东西可基本上都是老姐手工做的，这样的好处就在于（呵呵）成本够低\n\n \n![](http://media.tumblr.com/47ee77a1bd0018f604130773d666aca8/tumblr_inline_muwaru3miP1sosno0.jpg)\n\n  各种手工装饰品\n\n![](http://media.tumblr.com/33332f42c530fa61ce42d870fb212266/tumblr_inline_muwbimgiIY1sosno0.jpg)\n\n各种手工装饰品（2）\n\n\n![](http://media.tumblr.com/a5bef1f85ad82d69e83c3d4b3547c252/tumblr_inline_muwbytF4Te1sosno0.jpg)\n\n\n下午的排练\n\n![](http://media.tumblr.com/d507059669f6c3e54aa67312c3c6972f/tumblr_inline_muwc8fYoXN1sosno0.jpg)\n\nDJ登场\n\n![](http://media.tumblr.com/53058c4990ecf7012b1bf687cce782a0/tumblr_inline_muwc91yaKr1sosno0.jpg)\n\n\n造型很牛叉的感觉\n\n![](http://media.tumblr.com/01774f505ad96d3790173b29fc423c93/tumblr_inline_muwd9f39321sosno0.jpg)\n\n夜幕，唐朝登场\n\n![](http://media.tumblr.com/a08a781dcd9ffe5e6c1ea8233511f542/tumblr_inline_muwdbwzu4J1sosno0.jpg)\n\n唐朝乐队，中国摇滚乐最著名乐队之一\n\n\n![](http://media.tumblr.com/2cd6d36bfd45df5ef9a37c6b3df14ac4/tumblr_inline_muwdllOgEZ1sosno0.jpg)\n\n邓紫棋（G.E.M.）\n\n\n![](http://media.tumblr.com/fafeff5196c0ed3e1321593d826f0a93/tumblr_inline_muwdruWtmD1sosno0.jpg)\n\n邓紫棋（G.E.M.）2\n\n\n![](http://media.tumblr.com/aafa148a5d8f7863f8618ae62e7dc41b/tumblr_inline_muwe1uj4p51sosno0.jpg)\n\n\n![](http://media.tumblr.com/7ff75dd723b568a2a01c8a2850882951/tumblr_inline_muwe63gXn51sosno0.jpg)\n\n痛苦的信仰乐队\n\n# 小结\n\n    程序猿的文艺生活\n","mtime":1384783428000,"source":"_posts/chengdu-rock.md"},"7j04iimc6ud3naco":{"_id":"7j04iimc6ud3naco","content":"title: CODE: 记最近刨的那些坑之Tornado Chat\ndate: 2013-10-19 17:00:40\ntags:\n---\n\n# Tornado Chat\n\n项目地址：[https://github.com/yunlzheng/chat](https://github.com/yunlzheng/chat)\n\n开发时间：1周\n\n# 开发目的\n\n话说程序猿总是喜欢抛各种各样的坑，然后再往里面跳。\n\n# 简介\n\n基于Tornado 和 html5 websocket技术的匿名在线聊天工具\n\n# 杂记\n\n## 前端杂记\n\n*  头像服务\n\n由于是提供的匿名聊天服务，所以系统并不会主动保存用户的信息，实际上这个项目上根本就没用到数据持久化的东西，所以头像的问题如何解决是一个简单但是不可忽视的问题，第一个想到的就是使用[gavatar全球头像服务](http://en.gravatar.com/)，python里面要对支持gavatar服务很简单\n\n\n    # import code for encoding urls and generating md5 hashes\n    import urllib, hashlib\n \n    # Set your variables here\n    email = \"someone@somewhere.com\"\n    default = \"http://www.example.com/default.jpg\"\n    size = 40\n \n    # construct the url\n    gravatar_url = \"http://www.gravatar.com/avatar/\" +hashlib.md5(email.lower()).hexdigest() + \"?\"\n    gravatar_url += urllib.urlencode({'d':default, 's':str(size)})\n\n\n这是这里只有两个东西，一个是当前用户的邮箱地址，一个是默认头像。 获取用户邮箱很简单，增加一个登陆流程，虽然是匿名聊天室，但是最起码你应该输入你的昵称吧，输入昵称的时候再顺便多输入一下你的邮箱地址也是很合情合理的吧。\n\n头像问题就解决了没？ 还没呢，这是你就会发现，如果当前登录的用户没有使用gavatar头像服务的话，所有人的头像都是一样的。。。。 这个就很尴尬了， 到时候说话时连谁和谁都不知道了。\n\n不知道有木有同学注意到过github的头像，它本身也是使用gavatar头像服务，所以就去捣鼓了一下github发现了一个很有意思的服务[identicons](https://github.com/blog/1586-identicons)，如果想知道它是干嘛的？[点我](https://identicons.github.com/jasonlong.png)，所以把上面的代码简单改进一下，修改一下default的值，就实现了我们的目的\n\n这就是所谓的不重复造轮子？ 完全是偷懒！\n\n*  消息通知\n\nchat里面消息通知主要从3个方面完成：未读消息数，chrome桌面通知，以及消息提示音；\n\n\n*  聊天表情Emoji\n\n Emoji是前端时间用tower.im时才知道有的那么一个东西，关于Emoji的发展背景也挺好玩的有兴趣的同学可以去Google一把，毕竟是聊天程序所以表情还是应该要有的在chat里面主要使用了前端的javascript库[emojify.js](https://github.com/hassankhan/emojify.js)。简单来说这个库的作用就是匹配当前页面里面有的emoji表情符号，并替换成实现定义好的emoji表情样式图片，用法很简单，导入项目所需的css和js文件。在页面载入时，做一次全局配置\n\n\n        emojify.setConfig({\n            emojify_tag_type: 'img',\n            emoticons_enabled: true,\n            people_enabled: true,\n            nature_enabled: true,\n            objects_enabled: true,\n            places_enabled: true,\n            symbols_enabled: true\n        });\n       \n   \n 然后当你觉得应该更新一下页面的时候，调用\n\n        emojify.run();\n\n\n就能将页面中的emoji表情符号替换成响应的图片或者是字符图 \n      \n\n\n*  背景图片\n\n作为一个只会写点css和javascript而又不懂设计的程序猿，在自己刨坑的时候能窃的就窃点，毕竟都是往坑里面填点东西而已，用过微信网页版的的小伙伴一看就知道，这前端，这样式不就是跟微信一样的呀？ 当然不一样，只能算是模仿，而且还是模仿的很拙劣的那一类，完全没有微信网页版UI的那种流畅感觉。tumblr是最近才开始使用的，之前都是在[oschina](http://my.oschina.net/fhck/blog)上写点东西，不过以前写东西和现在写东西的最大的不同就在于，以前老是把博客当做是个笔记之类的，所以老写些纯技术的东西，后面用了印象笔记，好的资料卡卡卡卡的就往印象笔记里面放，所以后面博客就写的少了。刚说了tumblr是最近才开始用的，优点就不说了，跟国内的博客服务相比一个感觉是文艺范的（毕竟是轻博客嘛，想到国内的点点就不免感叹几句）。\n\n言归正传，tubmlr的登录注册页面每次刷新都是些很漂亮的背景，所以我也一不做二不休，既然无耻了就再无耻一次吧。 \n\npython里面做HTML解析的库倒是很多，这里就不做一一列举，主要怕列举出来就有点装公知的感觉，实际上按最大范围值来计算本人做python到现在也就3个月的时间，连基础都还没学一遍就匆匆开始跟着[@__左弈__](http://weibo.com/xuwenbao)做项目了。\n\n这里主要使用BeautifulSoup来实现的对tumblr登录页面的解析，并获得那张精选的随机大图\n\n\n    import re\n    import tornado.gen\n    from tornado.httpclient import AsyncHTTPClient\n    from BeautifulSoup import BeautifulSoup\n    from chat.handler import BaseHandler\n\n\n    class TumblrHandler(BaseHandler):\n\n        @tornado.gen.coroutine\n        def get(self):\n            http_client = AsyncHTTPClient()\n            http_response = yield http_client.fetch(\"https://www.tumblr.com/\")\n            content = http_response.body\n            soup = BeautifulSoup(content)\n            img = soup.findAll('img')[0]\n            pattern=re.compile(r\"\"\"<img\\s.*?\\s?src\\s*=\\s*['|\"]?([^\\s'\"]+).*?>\"\"\",re.I)\n            m = pattern.findall(str(img))\n            self.write(m[0])\n\n由于项目使用tornado做的，所以在chat里面就实现了一个RequestHandler异步的去获取tumblr的背景图片，并无耻的被chat使用了（呵呵）\n\n## 后端杂记\n\n----------------------------------无耻的待更新-------------------------------------\n\n# 画廊\n\n![](https://raw.github.com/yunlzheng/chat/master/static/images/login.png)\n\n![](https://raw.github.com/yunlzheng/chat/master/static/images/chat.png)\n\n\n# 小结\n\n这算是我开始我python开发道路的第二个作业吧。 第一个作业同样是基于tornado开发的web程序在线图书分享[pdflabs](http://pdflabs.herokuapp.com/)以后有时间再总结","mtime":1384783428000,"source":"_posts/code-chat.md"},"r1e33cecnflp7l0m":{"_id":"r1e33cecnflp7l0m","content":"title: JavaScript学习笔记-原型继承\ndate: 2012-09-06 13:09:32\ntags:\n---\n\n```\n  原文最初写与我的[OSCHINA博客](http://my.oschina.net/fhck/blog/77091)\n```\n\nJavaScript基于原型的编程语言，本身并不包含内置的类实现。但是可以通过Javascript模拟出类\n\n# 类\n\nJavaScript中有构造函数和New运算符。构造函数用来实例对象和初始化属性。任何JavaScript函数都可以用作构造函数，构造函数必须使用new运算符作为前缀来创建新的实例\n\nJavaScript要模拟一个类可以直接使用函数function\n\n```\n\nvar Person = function(name){\n   this.name = name;\n}\n\n//实例化Person\nvar alice = new Person('alice');\nconsole.log(alice.name);\n```\n\n这里需要注意的this关键字， new运算符会改变函数的执行上下文，同时改变return的行为。当使用new运算符来调用构造函数时，执行上下文this从全局对象编程一个空的上下文，这个上下文代表新生成的实例。因此this指向当前创建的实例。\n\n所以一下代码执行会出现undefined\n\n```\nvar bob = Person('bob');\nconsole.log(bob.name);\n```\n\n# 原型    \n\nJavaScript本身是基于原型的编程语言，原型的作用:区别类和实例\n\n```\nvar Animal = function(){}\n\nAnimal.run = function(){\n    console.log('Animal run')\n}\n\nAnimal.prototype.breath = function(){\n   console.log('animal breath');\n}\n\nVar Dog = function(){}\n\n//Dog继承自Animal\nDog.prototype = new Animal();\n\nDog.prototype.wag = function(){\n   console.log('dog wag');\n}\n\nvar dog = new Dog();\ndog.wag();\ndog.breath();//继承的属性\n```\n\n输出：\n\n```\ndog wag\nanimal breath\n```\n\n那么通过类的prototype定义的方法或者属性就可以叫做所有实例的方法或属性，而其他的方法和属性就是类本身的方法和属性类比java类中的静态变量\n\n这里对下面一些东西的叫法约定一下\n\n通常按照个人习惯\n\n构造函数/匿名函数\n\n```\nvar Person = function(name){\n  this.name=name;\n}\n```\n\n函数/类\n\n```\nfunction Person(){}\n对象/实例\n\nvar person = { name:'zhangsan',sex:'male'}\n```\n\n\n# 原型继承继承是的什么？\n\n还是上面关于Animal和Dog的例子，我们做一些改造\n\n```\nvar  animal = {\n        breath:function(){console.log('animal breath!')},\n};\n\nvar Dog = function(){}\n\n//Dog继承自animal\nDog.prototype = animal;\n\nDog.prototype.wag = function(){\n   console.log('dog wag');\n}\n\nvar dog = new Dog();\ndog.wag();\ndog.breath();//继承的属性\n```\n\n结果和上面的一样\n\n在一个例子中我们使用 Dog.prototype = new Animail;   这个例子中我们使用的是Dog.prototype = animal\n\n区别在于第一个例子中的Animal是一个匿名类，通过调用new运算符调用其构造函数返回了一个animal实例，而第二个例子中animal本身就已经是一个实例/对象。这就是之前提到的new运算符的作用。\n\n所以一个类的如果要继承另一个类那么就需要继承那个类的实例而不是类本身（Function），当然我们可以试一下直接使用Dog.prototype=Animal，结果就是当调用dog.breath();时直接返回的是一个Function对象，无法达到共享属性的意义。\n\n\n原型对象就是一个“模板”，定义在原型上的属性被用来初始化一个新的对象。任何对象都可以作为一个对象的原型对象，以此来共享属性。\n\n   \n\n","mtime":1384783428000,"source":"_posts/javascript-property-learn.md"},"4ypydk03edlhifzy":{"_id":"4ypydk03edlhifzy","content":"title: Hello World\ndate: 2013-11-10 15:25:22\ntags: hello\n---\n\n<iframe width=\"100%\" height=\"300\" src=\"http://jsfiddle.net/yunlzheng/utGW6/9/embedded/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>","mtime":1384438699000,"source":"_posts/hello-world.md"},"c0lu7hhljwgfp1gx":{"_id":"c0lu7hhljwgfp1gx","content":"title: Ubuntu Bind9泛域名解析配置\ndate: 2013-03-26 01:06:34\ntags:\n---\n\n# Bind9简介\n\n\nBIND (Berkeley Internet Name Domain)是Domain Name System (DNS) 协议的一个实现，提供了DNS主要功能的开放实现，包括\n\n域名服务器 (named)\nDNS解析库函数\nDNS服务器运行调试所用的工具\n是一款开放源码的DNS服务器软件，由美国加州大学Berkeley分校开发和维护的，\n\n按照ISC的调查报告，BIND是世界上使用最多最广泛的域名服务系统。不论你的邮件服务器，WEB服务器或者其他的services如何的安全可靠，DNS的故障会给你带来用户根本无法访问这些服务。\n\nBIND，也是我们常说的named，由于多数网络应用程序使用其功能，所以在很多BIND的弱点及时被发现。主要分为三个版本：\n\n## v4\n\n1998年多数UNIX捆绑的是BIND4，已经被多数厂商抛弃了，除了OpenBSD还在使用。OpenBSD核心人为BIND8过于复杂和不安全，所以继续使用BIND4。这样一来BIND8/9的很多优点都不包括在v4中。\n\n## v8\n\n就是如今使用最多最广的版本。\n\n## v9\n\n最新版本的BIND，全部重新写过，免费（但是由商业公司资助），也添加了许多新的功能（但是安全上也可能有更多的问题）。BIND9在2000年十月份推出，现在稳定版本是9.3.2。\n\n\n-----------------------------------------废话的分割线-----------------------------------------------\n\n-----------------------------------------主题的开始-------------------------------------------------\n\n# 安装bind9\n\n```\nsudo apt-get install bind9 bind9-doc dnsutils\n```\n\nbind9将默认安装在/etc/bind/目录下\n\n## rndc授权\n\n\n修改/etc/bind/named.conf.options,在未授权的情况下，将会出现\n\n错误信息：rndc: connect failed: 127.0.0.1#953: connection\n\n\n```\nsudo vim /etc/bind/named.conf.options\n```\n\n添加文件内容与/etc/bind/rndc.key相同\n例如rnfc.key的文件内容为：\n\n```\nkey \"rndc-key\" {\n        algorithm hmac-md5;\n        secret \"vfmD0+yvxhgW0wa8FQ54EQ==\";\n};\n```\n\n则在named.conf.options 中添加一下内容\n\n```\nkey \"rndc-key\" {\n        algorithm hmac-md5;\n        secret \"vfmD0+yvxhgW0wa8FQ54EQ==\";\n};\n\ncontrols {\n        inet 127.0.0.1 port 953\n                allow { 127.0.0.1; } keys { \"rndc-key\"; };\n};\n```\n\n到此为止Bind9的基本安装配置就算完成了。\n接下来是如何配置域名解析的问题\n\n## 添加本地区域文件\n\n创建文件 /etc/bind/zones.zheng\n\n```\nzone \"zheng.dev\"  { type master; file \"/etc/bind/db.zheng.dev\"; };\n```\n\n这里master表示DNS为主服务器\nfile则是只想该域的具体配置文件\n\n创建文件/etc/bind/db.zheng.dev\n\n添加一下内容\n\n```\n$TTL    86400\n@   IN  SOA localhost. root.localhost. (\n                  1     ; Serial\n             604800     ; Refresh\n              86400     ; Retry\n            2419200     ; Expire\n              86400 )   ; Negative Cache TTL\n;\n@   IN  NS  localhost.\n*.zheng.dev.    IN A    192.168.146.129\n```\n\n注意这里的 域名后缀也必须是与本地域配置文件中定义的zone相同。 *.zheng.dev. 表示匹配所有的以zheng.dev结尾的访问请求，这些请求都将会转发到192.168.146.129这台服务器。\n\n## 重启bind9 \n\n```\nsudo /etc/init.d/bind9 restart\n```\n\n这样一个最基本的基于bind9的泛域名配置即可完成\n\n-----------------------------------------再次废话的分割线---------------------------------------------\n\n感觉已经好久没写博客了。不负责任的讲是工作太多没时间，自己偷懒\n\n马上就到毕业设计了，毕业设计没完，老是觉得有道坎。老是有种只有毕业设计搞完，自己才可以毫无负担的凭爱好学习各种东西。悲催的是之前工作确实太忙了。还有差不多只有一个月的时间来准备毕业设计。 而我却基本才开始整理架构设计。\n\n\n\n\n\n\n","mtime":1384783428000,"source":"_posts/linux-bind9.md"},"44nfv0hbcgd05mcm":{"_id":"44nfv0hbcgd05mcm","content":"title: Tmux Linux会话管理神器\ndate: 2013-10-8 17:06:45\ntags:\n---\n\n## 邂逅Tmux\n\n   今天突然觉得每天背着自己的笔记本去公司上班是件活受罪不讨好的事情，于是还是决定在公司的Windows机器上重新弄一套开发环境，关于会话管理的东西之前有听领导介绍但却一直没有机会尝试一下，刚好今天又闲着没什么事情做，就尝试了一下Tmux\n\n## 初体验\n\n “高端大气上档次,低调奢华有内涵”，估计只有这话能形容一下使用的感受。会话管理那套东西就不多少说了，大家都懂。 给我感觉最牛B的还是它的多面板控制\n\n![](http://media.tumblr.com/a134acdee31402e4d91b147397e6ae21/tumblr_inline_mucqivJE881sosno0.png)\n\n## 安装\n \n* 环境Ubuntu 12.04\n\n```bash\nsudo apt-get install tmux\n```\n\n## 需要知道的概念\n\n* server    服务器。输入tmux命令时就开启了一个服务器。\n* session   会话。一个服务器可以包含多个会话。\n* window    窗口。一个会话可以包含多个窗口。\n* pane  面板。一个窗口可以包含多个面板。\n\n## 一些实用常用的命令\n\n### 基本命令\n\n* 开启一个新的会话\n\n```bash\ntmux\n```\n\n* 显示当前系统的所有会话\n\n```bash\ntmux ls\n```\n\n![](http://media.tumblr.com/ac9589bb921c65c0af88aae420012470/tumblr_inline_mucr4n5eWw1sosno0.png)\n\n\n* 重新链接到特定会话\n\n```bash\ntmux attach -t <会话编号>\n```\n\n![](http://media.tumblr.com/f3cfb99e5105aa5398a6f1f518d3072d/tumblr_inline_mucrc8Yakl1sosno0.png)\n\n### 控制台命令\n\n进入tmux后使用 ctrl+b 进入tmux控制台\n\n#### 系统操作\n\n* ？ 列出所有快捷键；按q返回\n* d 脱离当前会话；这样可以暂时返回Shell界面，输入tmux attach能够重新进入之前的会话\n* ctrl+z 挂起当前会话\n* : 进入命令行模式；此时可以输入支持的命令，例如kill-server可以关闭服务器\n\n#### 面板操作\n\n* % 将当前面板平分为左右两块\n\n![](http://media.tumblr.com/b71f6d2f90c2a40b8d05cc1ca52e2f2d/tumblr_inline_mucrhc05gU1sosno0.png)\n\n* “ 将当前面板平分为上下两块\n\n![](http://media.tumblr.com/c527cce15b93d562f501b34574ac5765/tumblr_inline_mucre7xHJb1sosno0.png)\n\n* x 关闭当前面板\n\n![](http://media.tumblr.com/1d0eb920858a50863f2551b7adbdf859/tumblr_inline_mucribO2iM1sosno0.png)\n\n* ctrl+方向键 以1个单元格为单位移动边缘以调整当前面板大小\n* o 在当前窗口中选择下一面板\n* 方向键 移动光标以选择面板\n* { / } 向前/后置换当前面板 \n\n## 更多的东西还需要你自己去试试！","mtime":1384783428000,"source":"_posts/linux-tmux.md"},"unrcevebt4jy9hnu":{"_id":"unrcevebt4jy9hnu","content":"title: Tomcat7 开启CGI，并配置awstats日志监控\ndate: 2012-10-8 17:42:38\ntags:\n---\n\n```\n  原文最初写与我的[OSCHINA博客](http://my.oschina.net/fhck/blog/85773)\n```\n\n# 搭建环境\n\nApache Tomcat 7.x\nJDK 1.6+\nPerl 5.2+\nUbuntu\n\n1，下载[Tomcat](http://www.fayea.com/apache-mirror/tomcat/tomcat-7/v7.0.32/bin/apache-tomcat-7.0.32.tar.gz)并解压到特定目录\n\n2,修改<Tomcat_HOME>\\conf\\web.xml配置文件，取消cgi servlet和对应的mapping注释\n\n```\n<servlet>\n <servlet-name>cgi</servlet-name>\n <servlet-class>org.apache.catalina.servlets.CGIServlet</servlet-class>\n <init-param>\n <param-name>debug</param-name>\n <param-value>0</param-value>\n </init-param>\n <init-param>\n <param-name>cgiPathPrefix</param-name>\n <param-value>WEB-INF/cgi</param-value>\n </init-param>\n <init-param>\n <param-name>passShellEnvironment</param-name>\n <param-value>true</param-value>\n </init-param>\n <load-on-startup>5</load-on-startup>\n</servlet>\n\n<servlet-mapping>\n <servlet-name>cgi</servlet-name>\n <url-pattern>/cgi-bin/*</url-pattern>\n</servlet-mapping>\n```\n\n3，修改<Tomcat_HOME>\\conf\\context.xml配置文件，在Context上添加privileged属性\n\n```\n<Context privileged=\"true\">\n<!--其他部分-->\n</Context>\n```\n\n4，安装Perl，window[点击下载](http://strawberry-perl.googlecode.com/files/strawberry-perl-5.16.1.1-32bit.msi)\n\n5，测试，在<Tomcat_HOME>\\webapps\\ROOT\\WEB-INF\\cgi\\下创建cgi脚本文件test1.cgi\n\n```\nprint \"Content-type: text/html\\n\\n\";\nprint \"Hello, world!\\n\"\n```\n\n6，启动Tomcat,并访问URL:[http:localhost:8080/cgi-bin/test1.cgi](http:localhost:8080/cgi-bin/test1.cgi)\n\n7,下载awstats日志分析工具,并解压到特定目录\n\n8，在<Tomcat_HOME>/webapps/下创建awstats目录以及相应的WEB-INF目录\n\n9，将<AWSTATS_HOME>/wwwroot/目录下css/,icon/,js/目录拷贝到<Tomcat_HOME>/webapps/awstats/目录下\n\n10,将<AWSTAS_HOME>/wwwroot/cgi-bin/下的所有文件拷贝到<TOMCAT_HOME>/webapps/awstats/WEB-INF/cgi目录下\n\n11，重命名<Tomcat_HOME>/webapps/awstats/cgi/awstats.model.conf 为awstats.localhost.conf\n\n\n```\n#对应日志文件所在位置\nLogFile=\"/home/test/server/apache-tomcat-7.0.29/logs/localhost_access_log.%yyyy-%mm-%dd.txt\"\n#站点域名\nSiteDomain=\"localhost\"\n#图标所在目录\nDirIcons=\"../icon\"\n#国际化所使用的语言，默认为\"auto\"\nLang=\"cn\"\n#国际化文件所在目录\nDirLang=\"./lang\"\n#在生成页面头部所要加入的HTML\nHTMLHeadSection=\"<div id=\"header\">Head Example</div>\"\n#在生成页面尾部索要加入的HTML\nHTMLEndSection=\"<div align='right'>@company</div>\"\n#生成页面所使用的样式表，awstas提供了默认的样式表，可通过该项目自定义awstats样式\nStyleSheet=\"../css/awstats_default.css\"\n```\n\n12,修改<TOMCAT_HOME>/conf/server.xml\n\n```\n<Service name=\"Catalina\"> \n  <Host name=\"localhost\"  appBase=\"webapps\" unpackWARs=\"true\" autoDeploy=\"true\">\n      <Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"\n               prefix=\"localhost_access_log.\" suffix=\".txt\"\n               pattern=\"combined\" fileDateFormat=\"yyyy-MM-dd\" resolveHosts=\"false\"/>\n</Host>\n</Service>\n```\n\n13，运行脚本 \n\n```\nawstats.pl -config=localhost -update\n```\n\n\n14,访问URL查看生成的日志页面：[http://localhost:8080/awstats/cgi-bin/awstats.pl?config=localhoost](http://localhost:8080/awstats/cgi-bin/awstats.pl?config=localhoost)\n\n\n\n\n\n","mtime":1384783428000,"source":"_posts/tomcat7-cgi-awstats.md"},"8p1v1b2qpiosm53u":{"_id":"8p1v1b2qpiosm53u","content":"title: about\ndate: 2013-11-14 15:15:09\n---","mtime":1384438699000,"source":"about/index.md"},"ft5hvef4lhmzpu9d":{"_id":"ft5hvef4lhmzpu9d","content":"title: 平时挖的那些坑\ndate: 2013-11-14 15:47:15\n---\n\n这里的都是一些自己平时用于练手的“坑”\n\n## [在线电子书分享](https://github.com/yunlzheng/PDFLabs)\n\n   pdflabs 基于tornado的在线电子书分享站点 [访问地址](http://pdflabs.herokuapp.com)\n\n## [Tornado chat](https://github.com/yunlzheng/chat)\n\n   基于websocket的多人在线匿名聊天程序\n","mtime":1384788375000,"source":"works/index.md"},"yzah597ln93611k0":{"content":"title: 迁移到Hexo\ndate: 2013-11-19 00:12:44\ntags:\n---\n\n话说我本身并不是一个十分勤奋的人，博客也是偶尔热血沸腾的时候谢谢，想想以前在大学的时候第一次看到别人用wordpress时感到无比的神奇与羡慕，所以一直有一个自己的独立博客都是我十分向往的事情，但是碍于囊中羞涩，独立域名那些什么的都没考虑了，而且一直没发现一个又帅有苦的域名（冷）。\n\n之前写博客陆陆续续的在oschina上，tumblr上写过一段时间，oschina上唯一让我感觉比较爽的事情，如果你的文章稍微有点内容就很容易能上推荐页。所以偶尔也能带来一些其他的满足感，但是它的页面设计真心不敢苟同，最终坚持了几个月以后还是就荒废了。\n\n后面又发现了tumblr本来对我来说是一个足够理想和强大的博客落户地，它有非常牛B的自定义能力，而且文章编辑同时支持富文本和markdown,所以花了好一段时间去捣鼓tumblr的自定义。就像是找到了一个新奇的玩具一样。可以。。 唯有感叹墙内墙外。\n\n最近，大概一周前吧，在v2ex上论坛上有看到一篇关于静态博客搭建求助的帖子，大部分人都是提的jelly之类的，但是不大感冒。最后有人提到hexo,顺藤摸瓜算是对hexo有个初识，好吧。我感觉有时候我真的就像个孩子一样。 没次就像又发现的一个更好玩的玩具，又开始不断的捣鼓，看了hexo wiki里的几个主题，一个个都看了，都没什么感觉于是乎又自己捣鼓了一个新的主题，不过鉴于时间原因就直接在hexo默认主题上做了一些修改，并且让它跟本土化（china），在默认的disus的基础上添加了多说评论的支持。 重点来说自己感觉效果还不错吧，把默认主题里的 wiget什么的都是砍掉了，毕竟我只需要一个足够简单的能让我写东西的地方就行了。 唯一让我困扰的是hexo的图片处理问题， 虽说直接将图片放在source下是可以的，但是我怕将来会不会出现source下全是图片组织过于难看的尴尬境地，如果自己人工组织图片又显得太麻烦了。[微博图床](http://weibotuchuang.sinaapp.com)算是一个解决方案，但是也担心图片的丢失问题。这个问题算是唯一觉得hexo做的不太好的地方。\n\n\n最后，感觉还是应该鼓励一下自己一定要坚持更新博客，后面会陆陆续续把以前写的东西都搬到github上.\n","mtime":1384792966000,"source":"_posts/begin-hexo.md","_id":"yzah597ln93611k0"}}}